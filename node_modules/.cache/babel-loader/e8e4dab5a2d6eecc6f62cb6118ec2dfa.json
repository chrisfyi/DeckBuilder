{"ast":null,"code":"var _jsxFileName = \"/Users/chrisfyi/Desktop/course_work/project_16/src/index.js\";\nimport React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\nimport axios from 'axios';\nimport { DeckList, SearchBar, SearchResults } from './components';\nimport { fetchCards } from './api';\n\nconst App = () => {\n  const [results, setResults] = useState([]);\n  const [deck, setDeck] = useState([]);\n\n  const addCardToDeck = ({\n    id,\n    name\n  }) => {\n    const nextDeck = [...deck]; // make a duplicate first\n\n    const index = nextDeck.findIndex(card => card.id === id); // index will be -1 if it is not found\n\n    if (index > -1) {\n      nextDeck[index].count += 1;\n    } else {\n      nextDeck.push({\n        id,\n        name,\n        count: 1\n      });\n    }\n\n    setDeck(nextDeck);\n  };\n\n  const removeCardFromDeck = ({\n    id\n  }) => {// what goes here?\n  };\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"app\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(SearchBar, {\n    setResults: setResults,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(SearchResults, {\n    results: results,\n    addCardToDeck: addCardToDeck,\n    removeCardFromDeck: removeCardFromDeck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(DeckList, {\n    deck: deck,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }\n  }));\n};\n\nconst MyComponent = () => {\n  const [count, setCount] = useState(0);\n  const [currentUser, setCurrentUser] = useState(null);\n  const [complexState, setComplexState] = useState({\n    foo: 0,\n    bar: {\n      baz: 0\n    }\n  });\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }\n  }, \"Current count: \", count), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }\n  }, \"User logged in: \", currentUser ? \"true\" : \"false\"), /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, \"Complex state: foo - \", complexState.foo, \", bar.baz: \", complexState.bar.baz));\n};\n\nReactDOM.render( /*#__PURE__*/React.createElement(App, {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 3\n  }\n}), document.getElementById('root'));","map":{"version":3,"sources":["/Users/chrisfyi/Desktop/course_work/project_16/src/index.js"],"names":["React","useState","ReactDOM","axios","DeckList","SearchBar","SearchResults","fetchCards","App","results","setResults","deck","setDeck","addCardToDeck","id","name","nextDeck","index","findIndex","card","count","push","removeCardFromDeck","MyComponent","setCount","currentUser","setCurrentUser","complexState","setComplexState","foo","bar","baz","render","document","getElementById"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,QAAP,MAAqB,WAArB;AAEA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,SACIC,QADJ,EAEIC,SAFJ,EAGIC,aAHJ,QAIS,cAJT;AAME,SACEC,UADF,QAEO,OAFP;;AAKA,MAAMC,GAAG,GAAG,MAAM;AAChB,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBT,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACU,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC,EAAD,CAAhC;;AAEA,QAAMY,aAAa,GAAG,CAAC;AAAEC,IAAAA,EAAF;AAAMC,IAAAA;AAAN,GAAD,KAAkB;AACtC,UAAMC,QAAQ,GAAG,CAAC,GAAGL,IAAJ,CAAjB,CADsC,CACV;;AAChC,UAAMM,KAAK,GAAGD,QAAQ,CAACE,SAAT,CAAmBC,IAAI,IAAIA,IAAI,CAACL,EAAL,KAAYA,EAAvC,CAAd,CAF0C,CAI1C;;AACA,QAAIG,KAAK,GAAG,CAAC,CAAb,EAAgB;AACdD,MAAAA,QAAQ,CAACC,KAAD,CAAR,CAAgBG,KAAhB,IAAyB,CAAzB;AACD,KAFD,MAEO;AACLJ,MAAAA,QAAQ,CAACK,IAAT,CAAc;AACZP,QAAAA,EADY;AAEZC,QAAAA,IAFY;AAGZK,QAAAA,KAAK,EAAE;AAHK,OAAd;AAKD;;AAEDR,IAAAA,OAAO,CAACI,QAAD,CAAP;AACG,GAhBD;;AAkBA,QAAMM,kBAAkB,GAAG,CAAC;AAAER,IAAAA;AAAF,GAAD,KAAY,CACrC;AACD,GAFD;;AAIA,sBACE;AAAK,IAAA,EAAE,EAAC,KAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,SAAD;AAAW,IAAA,UAAU,EAAGJ,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,aAAD;AACE,IAAA,OAAO,EAAGD,OADZ;AAEE,IAAA,aAAa,EAAGI,aAFlB;AAGE,IAAA,kBAAkB,EAAGS,kBAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,eAME,oBAAC,QAAD;AAAU,IAAA,IAAI,EAAGX,IAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IANF,CADF;AAUD,CApCD;;AAsCF,MAAMY,WAAW,GAAG,MAAM;AACtB,QAAM,CAACH,KAAD,EAAQI,QAAR,IAAoBvB,QAAQ,CAAC,CAAD,CAAlC;AACA,QAAM,CAACwB,WAAD,EAAcC,cAAd,IAAgCzB,QAAQ,CAAC,IAAD,CAA9C;AACA,QAAM,CAAC0B,YAAD,EAAeC,eAAf,IAAkC3B,QAAQ,CAAC;AAC/C4B,IAAAA,GAAG,EAAE,CAD0C;AAE/CC,IAAAA,GAAG,EAAE;AACHC,MAAAA,GAAG,EAAE;AADF;AAF0C,GAAD,CAAhD;AAOA,sBACE,uDACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBAAqBX,KAArB,CADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yBAAsBK,WAAW,GAAG,MAAH,GAAY,OAA7C,CAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BAA2BE,YAAY,CAACE,GAAxC,iBAA0DF,YAAY,CAACG,GAAb,CAAiBC,GAA3E,CAHF,CADF;AAOD,CAjBH;;AAmBA7B,QAAQ,CAAC8B,MAAT,eACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAEEC,QAAQ,CAACC,cAAT,CAAwB,MAAxB,CAFF","sourcesContent":["import React, { useState } from 'react';\nimport ReactDOM from 'react-dom';\n\nimport axios from 'axios';\n\nimport {\n    DeckList,\n    SearchBar,\n    SearchResults\n  } from './components';\n\n  import {\n    fetchCards,\n  } from './api';\n  \n  \n  const App = () => {\n    const [results, setResults] = useState([]);\n    const [deck, setDeck] = useState([]);\n  \n    const addCardToDeck = ({ id, name }) => {\n      const nextDeck = [...deck]; // make a duplicate first\n  const index = nextDeck.findIndex(card => card.id === id);\n\n  // index will be -1 if it is not found\n  if (index > -1) {\n    nextDeck[index].count += 1;\n  } else {\n    nextDeck.push({\n      id,\n      name,\n      count: 1\n    });\n  }\n\n  setDeck(nextDeck);\n    }\n  \n    const removeCardFromDeck = ({ id }) => {\n      // what goes here?\n    }\n  \n    return (\n      <div id=\"app\">\n        <SearchBar setResults={ setResults } />\n        <SearchResults \n          results={ results }\n          addCardToDeck={ addCardToDeck }\n          removeCardFromDeck={ removeCardFromDeck } />\n        <DeckList deck={ deck } />\n      </div>\n    );\n  }\n\nconst MyComponent = () => {\n    const [count, setCount] = useState(0);\n    const [currentUser, setCurrentUser] = useState(null);\n    const [complexState, setComplexState] = useState({\n      foo: 0,\n      bar: {\n        baz: 0\n      }\n    });\n  \n    return (\n      <>\n        <h3>Current count: { count }</h3>\n        <h3>User logged in: { currentUser ? \"true\" : \"false\" }</h3>\n        <h3>Complex state: foo - { complexState.foo }, bar.baz: { complexState.bar.baz }</h3>\n      </>\n    );\n  }\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n);"]},"metadata":{},"sourceType":"module"}